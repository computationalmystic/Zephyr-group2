
/* auto-generated by gen_syscalls.py, don't edit */

#ifndef _ASMLANGUAGE

#include <syscall_list.h>
#include <syscall_macros.h>

#ifdef __cplusplus
extern "C" {
#endif

K_SYSCALL_DECLARE3(K_SYSCALL_ATOMIC_CAS, atomic_cas, int, atomic_t *, target, atomic_val_t, old_value, atomic_val_t, new_value)

K_SYSCALL_DECLARE2(K_SYSCALL_ATOMIC_ADD, atomic_add, atomic_val_t, atomic_t *, target, atomic_val_t, value)

K_SYSCALL_DECLARE2(K_SYSCALL_ATOMIC_SUB, atomic_sub, atomic_val_t, atomic_t *, target, atomic_val_t, value)

K_SYSCALL_DECLARE2(K_SYSCALL_ATOMIC_SET, atomic_set, atomic_val_t, atomic_t *, target, atomic_val_t, value)

K_SYSCALL_DECLARE2(K_SYSCALL_ATOMIC_OR, atomic_or, atomic_val_t, atomic_t *, target, atomic_val_t, value)

K_SYSCALL_DECLARE2(K_SYSCALL_ATOMIC_XOR, atomic_xor, atomic_val_t, atomic_t *, target, atomic_val_t, value)

K_SYSCALL_DECLARE2(K_SYSCALL_ATOMIC_AND, atomic_and, atomic_val_t, atomic_t *, target, atomic_val_t, value)

K_SYSCALL_DECLARE2(K_SYSCALL_ATOMIC_NAND, atomic_nand, atomic_val_t, atomic_t *, target, atomic_val_t, value)

#ifdef __cplusplus
}
#endif

#endif
