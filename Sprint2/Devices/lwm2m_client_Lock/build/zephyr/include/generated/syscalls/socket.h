
/* auto-generated by gen_syscalls.py, don't edit */

#ifndef _ASMLANGUAGE

#include <syscall_list.h>
#include <syscall_macros.h>

#ifdef __cplusplus
extern "C" {
#endif

K_SYSCALL_DECLARE3(K_SYSCALL_ZSOCK_SOCKET, zsock_socket, int, int, family, int, type, int, proto)

K_SYSCALL_DECLARE1(K_SYSCALL_ZSOCK_CLOSE, zsock_close, int, int, sock)

K_SYSCALL_DECLARE2(K_SYSCALL_ZSOCK_SHUTDOWN, zsock_shutdown, int, int, sock, int, how)

K_SYSCALL_DECLARE3(K_SYSCALL_ZSOCK_BIND, zsock_bind, int, int, sock, const struct sockaddr *, addr, socklen_t, addrlen)

K_SYSCALL_DECLARE3(K_SYSCALL_ZSOCK_CONNECT, zsock_connect, int, int, sock, const struct sockaddr *, addr, socklen_t, addrlen)

K_SYSCALL_DECLARE2(K_SYSCALL_ZSOCK_LISTEN, zsock_listen, int, int, sock, int, backlog)

K_SYSCALL_DECLARE3(K_SYSCALL_ZSOCK_ACCEPT, zsock_accept, int, int, sock, struct sockaddr *, addr, socklen_t *, addrlen)

K_SYSCALL_DECLARE6(K_SYSCALL_ZSOCK_SENDTO, zsock_sendto, ssize_t, int, sock, const void *, buf, size_t, len, int, flags, const struct sockaddr *, dest_addr, socklen_t, addrlen)

K_SYSCALL_DECLARE6(K_SYSCALL_ZSOCK_RECVFROM, zsock_recvfrom, ssize_t, int, sock, void *, buf, size_t, max_len, int, flags, struct sockaddr *, src_addr, socklen_t *, addrlen)

K_SYSCALL_DECLARE3(K_SYSCALL_ZSOCK_FCNTL, zsock_fcntl, int, int, sock, int, cmd, int, flags)

K_SYSCALL_DECLARE3(K_SYSCALL_ZSOCK_POLL, zsock_poll, int, struct zsock_pollfd *, fds, int, nfds, int, timeout)

K_SYSCALL_DECLARE3(K_SYSCALL_ZSOCK_INET_PTON, zsock_inet_pton, int, sa_family_t, family, const char *, src, void *, dst)

K_SYSCALL_DECLARE4(K_SYSCALL_Z_ZSOCK_GETADDRINFO_INTERNAL, z_zsock_getaddrinfo_internal, int, const char *, host, const char *, service, const struct zsock_addrinfo *, hints, struct zsock_addrinfo *, res)

#ifdef __cplusplus
}
#endif

#endif
